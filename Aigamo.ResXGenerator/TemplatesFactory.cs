namespace Aigamo.ResXGenerator;
public class TemplatesFactory(string className)
{
    public string ClassName { get; set; } = className;
    private string _withNamespace = "Aigamo.ResXGenerator";

    public string WithNamespaces
    {
        get => _withNamespace;
        set
        {
            if (string.IsNullOrWhiteSpace(value)) return;
            _withNamespace = value;
        }
    }
    public bool GeneratedCode { get; set; }
    public bool IsClassPublic { get; set; }
    public bool IsClassStatic { get; set; }
    public bool IsClassPartial { get; set; }
    public bool IsMembersStatic { get; set; }
    public bool IsMemberNullForgivingOperators { get; set; }
    public bool IsGenerateUsings { get; set; } = true;
    public string InnerClassName { get; set; } = string.Empty;
    public string InnerClassInstanceName { get; set; } = string.Empty;

    public Func<string> CallBackGenerateInternalMembers { get; set; } = () => string.Empty;
    public Func<string> CallBackGenerateMembers { get; set; } = () => string.Empty;


    public string AutoGeneratedClass =>
        $$"""
          // ------------------------------------------------------------------------------
          // <auto-generated>
          //     This code was generated by a tool.
          //
          //     Changes to this file may cause incorrect behavior and will be lost if
          //     the code is regenerated.
          // </auto-generated>
          // ------------------------------------------------------------------------------
          #nullable enable
          namespace {{WithNamespaces}};
          {{GenerateUsingsStatements()}}
          {{AccessibilityClassStatement}} class {{ClassName}}
          {
              {{GeneratedInnerClass()}}
              {{CallBackGenerateMembers()}}
          }
          """;
    public string AutoGenerateInnerClassMember => """

                                                  """;

    public string AutoGenerateClassMember(string memberName, string neutralValue) => 
        $"""
         /// <summary
         /// Looks up a localized string similar to 
         {neutralValue.ToXmlComment()}.
         /// </summary>
         public {IsMembersStatic.InterpolateCondition("static ", string.Empty)} string{IsMemberNullForgivingOperators.InterpolateCondition(string.Empty, "?")} {memberName}
         """;

    private string GenerateInnerClassInstance()
    {
        if (!string.IsNullOrWhiteSpace(InnerClassInstanceName))
            return $"public {InnerClassName}{InnerClassInstanceName} {{ get; }} = new();";

        return string.Empty;
    }

    private string GeneratedInnerClass()
    {
        if (string.IsNullOrWhiteSpace(InnerClassName)) return string.Empty;

        return $$"""
                 {{GenerateInnerClassInstance()}}
                 {{AccessibilityClassStatement}} class {{InnerClassName}}
                 {
                     private static ResourceManager? s_resourceManager;
                     public static ResourceManager ResourceManager => s_resourceManager ??= new ResourceManager("{{WithNamespaces}}.{{ClassName}}", typeof({{InnerClassName}}).Assembly);
                     public static CultureInfo? CultureInfo { get; set; }
                     {{CallBackGenerateInternalMembers()}}
                 }
                 """;
    }

    private string AccessibilityClassStatement =>
        $"{IsClassPublic.InterpolateCondition("public", "internal")}{IsClassStatic.InterpolateCondition(" static", string.Empty)}{IsClassPartial.InterpolateCondition(" partial", string.Empty)}";

    private string GenerateUsingsStatements()
    {
        if (!IsGenerateUsings) return string.Empty;

        if (GeneratedCode)
            return """
                   using static Aigamo.ResXGenerator.Helpers;

                   """;
        return $"""
                using {Constants.SystemGlobalization};
                using {Constants.SystemResources};

                """;
    }
}
